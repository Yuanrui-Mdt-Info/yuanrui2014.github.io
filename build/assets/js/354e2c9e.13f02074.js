"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[6322],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},58306:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(87462),l=(n(67294),n(3905));const r={},o="On Kubernetes using Helm (Beta)",i={unversionedId:"deploying-airbyte/on-kubernetes-via-helm",id:"deploying-airbyte/on-kubernetes-via-helm",title:"On Kubernetes using Helm (Beta)",description:"Overview",source:"@site/../docs/deploying-airbyte/on-kubernetes-via-helm.md",sourceDirName:"deploying-airbyte",slug:"/deploying-airbyte/on-kubernetes-via-helm",permalink:"/deploying-airbyte/on-kubernetes-via-helm",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/deploying-airbyte/on-kubernetes-via-helm.md",tags:[],version:"current",frontMatter:{}},s={},u=[{value:"Overview",id:"overview",level:2},{value:"Quickstart",id:"quickstart",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Cluster Setup",id:"cluster-setup",level:3},{value:"Install <code>kubectl</code>",id:"install-kubectl",level:3},{value:"Configure <code>kubectl</code>",id:"configure-kubectl",level:3},{value:"Install helm",id:"install-helm",level:3},{value:"Adding Helm Repository",id:"adding-helm-repository",level:3},{value:"Deploying airbyte",id:"deploying-airbyte",level:2},{value:"Default deployment",id:"default-deployment",level:3},{value:"Configuring deployment",id:"configuring-deployment",level:3},{value:"Migration from old chart to new ones",id:"migration-from-old-chart-to-new-ones",level:2},{value:"Minio migration",id:"minio-migration",level:3},{value:"Custom logging and jobs configuration",id:"custom-logging-and-jobs-configuration",level:3},{value:"Database external secrets",id:"database-external-secrets",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"on-kubernetes-using-helm-beta"},"On Kubernetes using Helm (Beta)"),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Airbyte allows scaling sync workloads horizontally using Kubernetes. The core components ","(","api server, scheduler, etc",")"," run as deployments while the scheduler launches connector-related pods on different nodes."),(0,l.kt)("h2",{id:"quickstart"},"Quickstart"),(0,l.kt)("p",null,"If you don't want to configure your own K8s cluster and Airbyte instance, you can use the free, open-source project ",(0,l.kt)("a",{parentName:"p",href:"https://www.plural.sh/"},"Plural")," to bring up a K8s cluster and Airbyte for you. Use ",(0,l.kt)("a",{parentName:"p",href:"/deploying-airbyte/on-plural"},"this guide")," to get started."),(0,l.kt)("h2",{id:"getting-started"},"Getting Started"),(0,l.kt)("h3",{id:"cluster-setup"},"Cluster Setup"),(0,l.kt)("p",null,"For local testing we recommend following one of the following setup guides:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.docker.com/desktop/kubernetes"},"Docker Desktop ","(","Mac",")")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://minikube.sigs.k8s.io/docs/start"},"Minikube"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"NOTE: Start Minikube with at least 4gb RAM with ",(0,l.kt)("inlineCode",{parentName:"li"},"minikube start --memory=4000")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://kind.sigs.k8s.io/docs/user/quick-start/"},"Kind"))),(0,l.kt)("p",null,"For testing on GKE you can ",(0,l.kt)("a",{parentName:"p",href:"https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-zonal-cluster"},"create a cluster with the command line or the Cloud Console UI"),"."),(0,l.kt)("p",null,"For testing on EKS you can ",(0,l.kt)("a",{parentName:"p",href:"https://eksctl.io/introduction/"},"install eksctl")," and run ",(0,l.kt)("inlineCode",{parentName:"p"},"eksctl create cluster")," to create an EKS cluster/VPC/subnets/etc. This process should take 10-15 minutes."),(0,l.kt)("p",null,"For production, Airbyte should function on most clusters v1.19 and above. We have tested support on GKE and EKS. If you run into a problem starting Airbyte, please reach out on the ",(0,l.kt)("inlineCode",{parentName:"p"},"#troubleshooting")," channel on our ",(0,l.kt)("a",{parentName:"p",href:"https://slack.airbyte.io/"},"Slack")," or ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/airbytehq/airbyte/issues/new?assignees=&labels=type%2Fbug&template=bug-report.md&title="},"create an issue on GitHub"),"."),(0,l.kt)("h3",{id:"install-kubectl"},"Install ",(0,l.kt)("inlineCode",{parentName:"h3"},"kubectl")),(0,l.kt)("p",null,"If you do not already have the CLI tool ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl")," installed, please follow ",(0,l.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/tools/"},"these instructions to install"),"."),(0,l.kt)("h3",{id:"configure-kubectl"},"Configure ",(0,l.kt)("inlineCode",{parentName:"h3"},"kubectl")),(0,l.kt)("p",null,"Configure ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl")," to connect to your cluster by using ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl use-context my-cluster-name"),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For GKE"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Configure ",(0,l.kt)("inlineCode",{parentName:"p"},"gcloud")," with ",(0,l.kt)("inlineCode",{parentName:"p"},"gcloud auth login"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"On the Google Cloud Console, the cluster page will have a ",(0,l.kt)("inlineCode",{parentName:"p"},"Connect")," button, which will give a command to run locally that looks like"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"gcloud container clusters get-credentials $CLUSTER_NAME --zone $ZONE_NAME --project $PROJECT_NAME"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Use ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl config get-contexts")," to show the contexts available.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Run ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl config use-context $GKE_CONTEXT")," to access the cluster from ",(0,l.kt)("inlineCode",{parentName:"p"},"kubectl"),".")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"For EKS"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html"},"Configure your AWS CLI")," to connect to your project."),(0,l.kt)("li",{parentName:"ul"},"Install ",(0,l.kt)("a",{parentName:"li",href:"https://eksctl.io/introduction/"},"eksctl")),(0,l.kt)("li",{parentName:"ul"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"eksctl utils write-kubeconfig --cluster=<CLUSTER NAME>")," to make the context available to ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl")),(0,l.kt)("li",{parentName:"ul"},"Use ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl config get-contexts")," to show the contexts available."),(0,l.kt)("li",{parentName:"ul"},"Run ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl config use-context <eks context>")," to access the cluster with ",(0,l.kt)("inlineCode",{parentName:"li"},"kubectl"),".")))),(0,l.kt)("h3",{id:"install-helm"},"Install helm"),(0,l.kt)("p",null,"To install helm simply run:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"For MacOS",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"brew install helm")))),(0,l.kt)("li",{parentName:"ul"},"For Linux",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Download installer script ",(0,l.kt)("inlineCode",{parentName:"li"},"curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3")),(0,l.kt)("li",{parentName:"ul"},"Assign required premissions ",(0,l.kt)("inlineCode",{parentName:"li"},"chmod 700 get_helm.sh")),(0,l.kt)("li",{parentName:"ul"},"Run script ",(0,l.kt)("inlineCode",{parentName:"li"},"./get_helm.sh"))))),(0,l.kt)("h3",{id:"adding-helm-repository"},"Adding Helm Repository"),(0,l.kt)("p",null,"From now charts are stored in helm-repo thus there're no need to clone the repo each time you need to deploy the chart."),(0,l.kt)("p",null,"To add remote helm repo simply run: ",(0,l.kt)("inlineCode",{parentName:"p"},"helm repo add airbyte https://airbytehq.github.io/helm-charts"),"."),(0,l.kt)("p",null,"Where ",(0,l.kt)("inlineCode",{parentName:"p"},"airbyte")," is the name of the repository that will be indexed locally."),(0,l.kt)("p",null,"After adding the repo, perform the repo indexing process by running ",(0,l.kt)("inlineCode",{parentName:"p"},"helm repo update"),"."),(0,l.kt)("p",null,"After this you can browse all charts uploaded to repository by running ",(0,l.kt)("inlineCode",{parentName:"p"},"helm search repo airbyte")),(0,l.kt)("p",null,"It'll produce the output below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"NAME                            CHART VERSION   APP VERSION     DESCRIPTION                             \nairbyte-oss/airbyte             0.30.23         0.39.37-alpha   Helm chart to deploy airbyte            \nairbyte-oss/airbyte-bootloader  0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-bootloader \nairbyte-oss/pod-sweeper         0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-pod-sweeper\nairbyte-oss/server              0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-server     \nairbyte-oss/temporal            0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-temporal   \nairbyte-oss/webapp              0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-webapp     \nairbyte-oss/worker              0.30.23         0.39.37-alpha   Helm chart to deploy airbyte-worker  \n")),(0,l.kt)("h2",{id:"deploying-airbyte"},"Deploying airbyte"),(0,l.kt)("h3",{id:"default-deployment"},"Default deployment"),(0,l.kt)("p",null,"If you don't intend to customise your deployment, you can deploy airbyte as is with default values."),(0,l.kt)("p",null,"In order to do so, run the command: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"helm install %release_name% airbyte/airbyte\n")),(0,l.kt)("p",null,"It'll deploy airbyte with default configuration"),(0,l.kt)("h3",{id:"configuring-deployment"},"Configuring deployment"),(0,l.kt)("p",null,"In order to configure deployment, you need to create values.yaml file in local folder and populate it with default configuration override values."),(0,l.kt)("p",null,"values.yaml example can be located in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/airbytehq/airbyte/blob/master/charts/airbyte/values.yaml"},"charts/airbyte")," folder of the airbyte repository."),(0,l.kt)("p",null,"After specifying your own configuration, proceed with chart deployment by running "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"helm install --values path/to/values.yaml %release_name% airbyte/airbyte\n")),(0,l.kt)("h2",{id:"migration-from-old-chart-to-new-ones"},"Migration from old chart to new ones"),(0,l.kt)("p",null,"Starting from ",(0,l.kt)("inlineCode",{parentName:"p"},"0.39.37-alpha")," we've revisited helm charts structure and separated all components of airbyte into their own independent charts, thus by allowing our developers to test single component without deploying airbyte as a whole and by upgrading single component at a time."),(0,l.kt)("p",null,"In most cases upgrade from older monolith chart to a new one should go without any issue, but if you've configured custom logging or specified custom configuration of DB or Logging then follow the instructions listed bellow"),(0,l.kt)("h3",{id:"minio-migration"},"Minio migration"),(0,l.kt)("p",null,"Since the latest release of bitnami/minio chart, they've changed the way of setting up the credentials for accessing the minio. (written mid-2022)"),(0,l.kt)("p",null,"Going forward in new version you need to specify the following values in values yaml for user/password instead old one"),(0,l.kt)("p",null,"Before:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"minio:\n  rootUser: airbyte-user\n  rootPassword: airbyte-password-123\n")),(0,l.kt)("p",null,"After:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"minio:\n  auth:\n    rootUser: minio\n    rootPassword: minio123\n\n")),(0,l.kt)("p",null,"Before upgrading the chart update values.yaml as stated above and then run:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Get the old rootPassword by running ",(0,l.kt)("inlineCode",{parentName:"li"},'export ROOT_PASSWORD=$(kubectl get secret --namespace "default" %release_name%-minio -o jsonpath="{.data.root-password}" | base64 -d)')),(0,l.kt)("li",{parentName:"ul"},"Perform upgrade of chart by running ",(0,l.kt)("inlineCode",{parentName:"li"},"helm upgrade %release_name% airbyte/airbyte --set auth.rootPassword=$ROOT_PASSWORD"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"If you get an error about setting the auth.rootPassword, then you forgot to update the ",(0,l.kt)("inlineCode",{parentName:"li"},"values.yaml")," file")))),(0,l.kt)("h3",{id:"custom-logging-and-jobs-configuration"},"Custom logging and jobs configuration"),(0,l.kt)("p",null,"Starting from ",(0,l.kt)("inlineCode",{parentName:"p"},"0.39.37-alpha")," if you've configured logging yourself using ",(0,l.kt)("inlineCode",{parentName:"p"},"logging or jobs")," section of ",(0,l.kt)("inlineCode",{parentName:"p"},"values.yaml")," file, you need to update your configuration so you can continue to use your custom logging and jobs configuration."),(0,l.kt)("p",null,"Simply declare global value in ",(0,l.kt)("inlineCode",{parentName:"p"},"values.yaml")," file and move everything related to logging and jobs under that section like in the example bellow:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"global:\n    logging:\n        %your_logging_options_here%\n    jobs:\n        %your_jobs_options_here%\n")),(0,l.kt)("p",null,"After updating ",(0,l.kt)("inlineCode",{parentName:"p"},"values.yaml")," simply upgrade your chart by running command: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade -f path/to/values.yaml %release_name% airbyte/airbyte\n")),(0,l.kt)("h3",{id:"database-external-secrets"},"Database external secrets"),(0,l.kt)("p",null,"If you're using external DB secrets, then provide them in ",(0,l.kt)("inlineCode",{parentName:"p"},"values.yaml")," under global.database section in the following format:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},'  database:\n    secretName: "myOctaviaSecret"\n    secretValue: "postgresql-password"\n    host: "example.com"\n    port: "5432"\n')),(0,l.kt)("p",null,"And upgrade the chart by running: "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"helm upgrade -f path/to/values.yaml %release_name% airbyte/airbyte\n")))}c.isMDXComponent=!0}}]);