"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[8075],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return r?n.createElement(f,c(c({ref:t},p),{},{components:r})):n.createElement(f,c({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},46557:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(87462),o=(r(67294),r(3905));const a={},c="Step  1: Generate the source connector project locally",i={unversionedId:"connector-development/config-based/tutorial/create-source",id:"connector-development/config-based/tutorial/create-source",title:"Step  1: Generate the source connector project locally",description:"Let's start by cloning the Airbyte repository:",source:"@site/../docs/connector-development/config-based/tutorial/1-create-source.md",sourceDirName:"connector-development/config-based/tutorial",slug:"/connector-development/config-based/tutorial/create-source",permalink:"/connector-development/config-based/tutorial/create-source",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/connector-development/config-based/tutorial/1-create-source.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{}},l={},s=[{value:"Next steps",id:"next-steps",level:2},{value:"More readings",id:"more-readings",level:2}],p={toc:s};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"step--1-generate-the-source-connector-project-locally"},"Step  1: Generate the source connector project locally"),(0,o.kt)("p",null,"Let's start by cloning the Airbyte repository:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone git@github.com:airbytehq/airbyte.git\n$ cd airbyte\n")),(0,o.kt)("p",null,"Airbyte provides a code generator which bootstraps the scaffolding for our connector."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd airbyte-integrations/connector-templates/generator\n$ ./generate.sh\n")),(0,o.kt)("p",null,"This will bring up an interactive helper application. Use the arrow keys to pick a template from the list. Select the ",(0,o.kt)("inlineCode",{parentName:"p"},"Configuration Based Source")," template and then input the name of your connector. The application will create a new directory in ",(0,o.kt)("inlineCode",{parentName:"p"},"airbyte/airbyte-integrations/connectors/")," with the name of your new connector."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Configuration Based Source\nSource name: exchange-rates-tutorial\n")),(0,o.kt)("p",null,"For this walkthrough, we'll refer to our source as ",(0,o.kt)("inlineCode",{parentName:"p"},"exchange-rates-tutorial"),"."),(0,o.kt)("h2",{id:"next-steps"},"Next steps"),(0,o.kt)("p",null,"Next, ",(0,o.kt)("a",{parentName:"p",href:"/connector-development/config-based/tutorial/install-dependencies"},"we'll install dependencies required to run the connector")),(0,o.kt)("h2",{id:"more-readings"},"More readings"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/airbytehq/airbyte/blob/master/airbyte-integrations/connector-templates/generator/README.md"},"Connector generator"))))}u.isMDXComponent=!0}}]);