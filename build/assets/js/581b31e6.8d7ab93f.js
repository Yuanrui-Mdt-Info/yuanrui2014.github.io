"use strict";(self.webpackChunkdocu=self.webpackChunkdocu||[]).push([[3642],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,b=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(b,o(o({ref:t},u),{},{components:n})):r.createElement(b,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},22036:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},o="Issues & Pull Requests",s={unversionedId:"contributing-to-airbyte/issues-and-pull-requests",id:"contributing-to-airbyte/issues-and-pull-requests",title:"Issues & Pull Requests",description:"Titles",source:"@site/../docs/contributing-to-airbyte/issues-and-pull-requests.md",sourceDirName:"contributing-to-airbyte",slug:"/contributing-to-airbyte/issues-and-pull-requests",permalink:"/contributing-to-airbyte/issues-and-pull-requests",draft:!1,editUrl:"https://github.com/airbytehq/airbyte/blob/master/docs/../docs/contributing-to-airbyte/issues-and-pull-requests.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Code Style",permalink:"/contributing-to-airbyte/code-style"},next:{title:"Gradle Cheatsheet",permalink:"/contributing-to-airbyte/gradle-cheatsheet"}},l={},p=[{value:"Titles",id:"titles",level:2},{value:"Descriptions",id:"descriptions",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"issues--pull-requests"},"Issues & Pull Requests"),(0,a.kt)("h2",{id:"titles"},"Titles"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Describe outputs, not implementation"),": An issue or PR title should describe the desired end result, not the implementation. The exception is child issues/subissues of an epic. ",(0,a.kt)("strong",{parentName:"p"},"Be specific about the domain"),". Airbyte operates a monorepo, so being specific about what is being changed in the PR or issue title is important."),(0,a.kt)("p",null,"Some examples: ",(0,a.kt)("em",{parentName:"p"},"subpar issue title"),": ",(0,a.kt)("inlineCode",{parentName:"p"},'Remove airbyteCdk.dependsOn("unrelatedPackage")'),". This describes a solution not a problem."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"good issue title"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Building the Airbyte Python CDK should not build unrelated packages"),". Describes desired end state and the intent is understandable without reading the full issue."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"subpar PR title"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Update tests"),". Which tests? What was the update?"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"good PR title"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Source MySQL: update acceptance tests to connect to SSL-enabled database"),". Specific about the domain and change that was made."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"PR title conventions")," When creating a PR, follow the naming conventions depending on the change being made:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'Notable updates to Airbyte Core: "\ud83c\udf89"',(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"e.g: ",(0,a.kt)("inlineCode",{parentName:"li"},"\ud83c\udf89 enable configuring un-nesting in normalization")))),(0,a.kt)("li",{parentName:"ul"},"New connectors: \u201c\ud83c\udf89 New source or destination: \u201d e.g: ",(0,a.kt)("inlineCode",{parentName:"li"},"\ud83c\udf89 New Source: Okta")),(0,a.kt)("li",{parentName:"ul"},"New connector features: \u201c\ud83c\udf89 :  E.g:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"\ud83c\udf89 Destination Redshift: write JSONs as SUPER type instead of VARCHAR")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"\ud83c\udf89 Source MySQL: enable logical replication")))),(0,a.kt)("li",{parentName:"ul"},"Bugfixes should start with the  \ud83d\udc1b emoji",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"\ud83d\udc1b Source Facebook Marketing: fix incorrect parsing of lookback window")))),(0,a.kt)("li",{parentName:"ul"},"Documentation improvements should start with any of the book/paper emojis: \ud83d\udcda \ud83d\udcdd etc\u2026"),(0,a.kt)("li",{parentName:"ul"},"Any refactors, cleanups, etc.. that are not visible improvements to the user should not have emojis")),(0,a.kt)("p",null,"The emojis help us identify which commits should be included in the product release notes."),(0,a.kt)("h2",{id:"descriptions"},"Descriptions"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Context"),": Provide enough information ","(","or a link to enough information",")"," in the description so team members with no context can understand what the issue or PR is trying to accomplish. This usually means you should include two things:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Some background information motivating the problem")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"A description of the problem itself")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Good places to start reading and file changes that can be skipped"),(0,a.kt)("p",{parentName:"li"},"Some examples:"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"insufficient context"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"Create an OpenAPI to JSON schema generator"),". Unclear what the value or problem being solved here is."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"good context"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text"},"When creating or updating connectors, we spend a lot of time manually transcribing JSON Schema files based on OpenAPI docs. This is ncessary because OpenAPI and JSON schema are very similar but not perfectly compatible. This process is automatable. Therefore we should create a program which converts from OpenAPI to JSONSchema format.\n")))}c.isMDXComponent=!0}}]);